fn factorial(n: u32) -> u32 {
    if n == 0 {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

fn fibonacci(n: u32) -> u32 {
    if n <= 1 {
        return 1;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

fn main() {
    let mut number: u32 = 42;
    println!("The number is: {}", number);

    let mut factorial_result: u32 = factorial(5);
    println!("Factorial of 5 is: {}", factorial_result);

    let mut pi: f32 = 3.14159;
    println!("Pi is approximately: {}", pi);

    let mut radius: f32 = 5.0;
    let mut area: f32 = pi * radius * radius;
    println!("Area of a circle with radius {} is: {}", radius, area);

    let mut is_true: bool = true;
    let mut is_false: bool = false;
    println!("Is true? {}", is_true);
    println!("Is false? {}", is_false);

    for i in 0..4 {
        let mut b : u32 = i+1;
        println!("The {}th Fibonacci number is: {}", b, fibonacci(b));
    }
    let mut a : u32 = 0;
    while a < 10 {
        println!("{a} ");
        a = a + 2;
    }
}