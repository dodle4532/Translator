fn factorial(n: u32) -> u32 {
    if n == 0 {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

fn fibonacci(n: u32) -> u32 {
    if n <= 1 {
        return 1;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

fn main() {
    let number: u32 = 42;
    println!("The number is: {}\n", number);

    let factorial_result: u32 = factorial(5);
    println!("Factorial of 5 is: {}\n", factorial_result);

    let pi: f32 = 3.14159;
    println!("Pi is approximately: {}\n", pi);

    let radius: f32 = 5.0;
    let area: f32 = pi * radius * radius;
    println!("Area of a circle with radius {} is: {}\n", radius, area);

    let is_true: bool = true;
    let is_false: bool = false;
    println!("Is true? {}\n", is_true);
    println!("Is false? {}\n", is_false);

    let str1: str = "123";
    let str2: str = "456";
    println!("'{str1}'+'{str2}' = {str1+str2}\n");

    for i in 1..5 {
        let b : u32 = i;
        println!("The {}th Fibonacci number is: {}\n", b, fibonacci(b));
    }
    let a : u32 = 0;
    while a < 10 {
        println!("{a} ");
        a = a + 2;
    }
    println!("\n");
}